!!!
%html{html_attrs, {}}
  %head
    %title JavaScript Unit Test File
    %meta{ :'http-equiv' => "content-type", :content => "text/html; charset=utf-8" }
    %script{ :src => "/jsunittest.js", :type => "text/javascript" }
    %script{ :src => "/mock_xmlhttprequest.js", :type => "text/javascript" }
    %script{ :src => "/prototype.js", :type => "text/javascript" }
    %script{ :src => "/jack.js", :type => "text/javascript" }
    %link{ :href => "/unittest.css", :rel => "stylesheet", :type => "text/css" }
    
    %script{ :src => "/sprocketize/#{@object_under_test_file_name}", :type => "text/javascript" }<
  %body
    #content
      #header
        %h1 JavaScript unit test file
        %p
          This file tests
          %strong= @object_under_test_file_name
      %div{ :id => @test_log }<
    :javascript
      (function() {
        var search = document.location.search,
            testFilter = (function() {
              if (search) {
                var match = search.match(/(\b|\?|&)tests=(.*)(\b|\?\&)/);
                if (match) {
                  var tests = match[2].split(/,/);
                  return function(test) { return tests.include(test.key); }
                }
              }
              return function() { return true; }
            })();
        
        new Test.Unit.Runner($H(#{@function_returning_test_methods}()).
          filter(testFilter).inject({}, function(a, p) {
            a[p.key] = p.value;
            return a;
        }), { testLog: #{@test_log.to_json} } );
      })();
